---
- name: create mysql databases
  action: mysql_db name={{ item.name }} state=present
  with_items: sites
  when: item.has_mysql_db == True
  tags: add_sites

- name: create mysql users
  action: mysql_user name={{ item.mysql_user }} priv={{ item.name }}.*:ALL state=present password="{{ lookup('password', '../../../credentials/' + item.name + '/mysql_password length=15') }}"
  with_items: sites
  when: item.has_mysql_db == True
  tags: add_sites

- name: ensure configurations are present
  action: template src=nginx_server.j2 dest=/etc/nginx/sites-available/{{ item.name }} owner=root group=root mode=0644
  with_items: sites
  tags: add_sites

- name: ensure websites are enabled
  action: file src=/etc/nginx/sites-available/{{ item.name }} dest=/etc/nginx/sites-enabled/{{ item.name }} state=link
  with_items: sites
  tags: add_sites

- name: ensure web root directories exists and with right permissions
  action: file path=/var/www/{{ item.name }} owner=root group=www-data mode=0777 state=directory
  with_items: sites
  tags: add_sites

- name: ensure default website is disabled
  action: file path=/etc/nginx/sites-enabled/default state=absent
  tags: add_sites

- name: reload nginx service
  action: service name=nginx state=reloaded
  tags: add_sites

